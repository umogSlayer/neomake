---
# Disabling building for AppVeyor. We are just testing things.
build: false
clone_depth: 10

# Cache the vim and vader directories between builds.
cache:
  - C:\vim -> .appveyor.yml
  - C:\projects\neomake\build\vim\plugins\vader -> .appveyor.yml

init:
  # Stop git from changing newlines
  - git config --global core.autocrlf input

install:
  # Download and unpack Vim
  - ps: >-
      if (!(Test-Path -Path C:\vim)){
        Add-Type -A System.IO.Compression.FileSystem
        Invoke-WebRequest ftp://ftp.vim.org/pub/vim/pc/vim80-586w32.zip `
          -OutFile C:\vim.zip
        [IO.Compression.ZipFile]::ExtractToDirectory('C:\vim.zip', 'C:\vim')
        Invoke-WebRequest ftp://ftp.vim.org/pub/vim/pc/vim80-586rt.zip `
          -OutFile C:\rt.zip
        [IO.Compression.ZipFile]::ExtractToDirectory('C:\rt.zip', 'C:\vim')
      }
  # Clone Vader and check out the commit we want
  - ps: >-
      if (!(Test-Path -Path C:\projects\neomake\build\vim\plugins\vader)){
        git clone -q --depth=1 --branch=display-source-with-exceptions https://github.com/blueyed/vader.vim C:\projects\neomake\build\vim\plugins\vader
      }

test_script:
  - cd C:\projects\neomake
  - C:\vim\vim\vim80\vim.exe --version
  - set NEOMAKE_TEST_NO_COLORSCHEME=1
  - C:\Python36-x64\python -m pip install --user covimerage
  - where.exe covimerage
  - ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      make --keep-going testcoverage TEST_VIM=C:/vim/vim/vim80/vim.exe VADER_ARGS=tests/isolated/compat-get_argv-on-emulated-windows.vader
